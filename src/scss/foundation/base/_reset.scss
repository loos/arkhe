@charset "UTF-8";

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	font-size: inherit;
	font-family: inherit;
	line-height: inherit;
}

::before,
::after {
	box-sizing: inherit;
	text-decoration: inherit;
	vertical-align: inherit;
}

b,
strong {
	font-weight: bold;
}


// HTML5 display-role reset for older browsers
main {
	display: block;
}

ruby > rt {
	font-size: 50%;
}

img {
	max-width: 100%;
	height: auto;
	border-style: none;
}

video {
	outline: none;
}

svg:not([fill]) {
	fill: currentcolor;
}

[hidden] {
	display: none; /* Add the correct display in IE */
}


/* Form */
button,
input,
optgroup,
select,
textarea {
	font-size: inherit;
	font-family: inherit;
	line-height: inherit;
}

/* Show the overflow in IE. */

button,
input { /* Show the overflow in Edge. */
	overflow: visible;
}

/* Remove the inheritance of text transform in Edge, Firefox, and IE.  */
button,
select { /* Remove the inheritance of text transform in Firefox. */
	text-transform: none;
}

/* button */
button,
[type="button"],
[type="reset"],
[type="submit"] {
	display: inline-block;
	cursor: pointer;
	-webkit-appearance: button;
}

[role="button"] {
	cursor: pointer; //バグ対策
}

/* normalize 通り */
fieldset {
	padding: .35em .75em .625em;
}

/* normalize 通り */
legend {
	display: table;
	box-sizing: border-box;
	max-width: 100%;
	padding: 0;
	color: inherit;
	white-space: normal;
}

input,
textarea,
select,
button {
	padding: .25em .5em;
	color: #333;
	border: 1px solid var(--ark-color--border);
	border-radius: 0;
}

[type="color"] {
	padding: 0;
}

[type="range"] {
	vertical-align: middle;
}


/*
 * Accessibility
 */

/* Specify the progress cursor of updating elements */
[aria-busy="true"] {
	cursor: progress;
}

/* Specify the pointer cursor of trigger elements */
[aria-controls] {
	cursor: pointer;
}

/* Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements */
[aria-disabled] {
	cursor: default;
}

/* Hide content from screens but not screenreaders */
@media screen {

	[hidden~="screen"] {
		display: inherit;
	}

	[hidden~="screen"]:not(:active):not(:focus):not(:target) {
		position: absolute !important;
		clip: rect(0 0 0 0) !important;
	}
}

